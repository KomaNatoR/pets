{"version":3,"file":"static/js/708.403824a8.chunk.js","mappings":"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","sources":["components/shares/Button/buttonStyles/whiteBtnStyles.js","components/shares/Button/button.styled.js","components/shares/Button/buttonStyles/blueBtnStyles.js","components/shares/Button/buttonStyles/yellowBtnStyles.js","components/shares/Button/buttonStyles/closeBtnStyles.js","components/shares/Button/Button.jsx","components/shares/Loader/loader.styled.js","components/shares/Loader/Loader.jsx","components/shares/Title/TitlesView/titleViews.styled.js","components/shares/Title/TitlesView/TitleOne.jsx","components/shares/Title/TitlesView/TitleTwoMain.jsx","components/shares/Title/TitlesView/TitleTwoAuth.jsx","components/shares/Title/TitlesView/TitleTwoError.jsx","components/shares/Title/TitlesView/TitleThreeUser.jsx","components/shares/Title/TitlesView/TitleThreeMainCard.jsx","components/shares/Title/Title.jsx","pages/AuthPages/authPage.styled.js","pages/AuthPages/data/fields.js","pages/AuthPages/data/initialValues.js","pages/AuthPages/data/regSchema.js","pages/AuthPages/elements/elements.styled.js","pages/AuthPages/elements/TextField.jsx","pages/AuthPages/AuthBox.jsx","pages/AuthPages/RegPage/RegPage.jsx"],"sourcesContent":["// тут прописуються стилі для БІЛОЇ кнопки!\n\nexport const whiteBtnStyles = ({ colors }) => `\n    padding: 8px 20px;\n    border: 2px solid ${colors.blue};\n    color:${colors.blue};\n    background: ${colors.white};\n\n    :hover, :focus {\n        padding: 10px 22px;\n        color:${colors.white};\n        background: ${colors.gradBlue};\n        border: none;\n    }\n`;","import styled from \"@emotion/styled\";\n\nimport { whiteBtnStyles, blueBtnStyles, yellowBtnStyles, closeBtnStyles } from \"./buttonStyles\";\n\n\nconst switchTheme = ({buttonView, theme}) => {\n\n    switch (buttonView) {\n        case \"white\":\n            return whiteBtnStyles(theme);\n        case \"blue\":\n            return blueBtnStyles(theme);\n        case \"yellow\":\n            return yellowBtnStyles(theme);\n        case \"close\":\n            return closeBtnStyles();\n    \n        default:\n            return whiteBtnStyles(theme);\n    };\n};\n\nexport const ButtonTag = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width:${({width})=>width};\n\n    border-radius: 40px;\n    font-family: inherit;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: calc(22 / 16);\n    letter-spacing: 0.04em;\n    cursor: pointer;\n\n    transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    ${switchTheme}\n\n\n    :active {\n    }\n    :hover, :focus {\n        transform: scale(${({scale})=>scale});\n    }\n`;","// тут прописуються стилі для СИНЬОЇ кнопки!\n\nexport const blueBtnStyles = ({ colors }) => `\n    padding: 8px 20px;\n    border: 2px solid ${colors.blue};\n    color:${colors.white};\n    background: ${colors.blue};\n\n    :hover, :focus {\n        padding: 10px 22px;\n        color:${colors.white};\n        background: ${colors.gradBlue};\n        border: none;\n    }\n`;","// тут прописуються стилі для ЖОВТОЇ кнопки!\n\nexport const yellowBtnStyles = ({ colors }) => `\n    padding: 8px 20px;\n    border: 2px solid ${colors.yellow};\n    color:${colors.yellow};\n    background: ${colors.white};\n\n    :hover, :focus {\n        padding: 10px 22px;\n        color:${colors.white};\n        background: ${colors.yellow};\n        border: none;\n    }\n`;","export const closeBtnStyles = () => `\n    width: auto;\n    height: auto;\n    padding: 0;\n    border: 50%;\n    border: none;\n    background: rgba(0,0,0,0);\n`;\n\n\n    // transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    // :hover, :focus {\n    //     transform: scale(1.3);\n    //     background: ${colors.yellow};\n    //     svg {\n    //         fill: ${colors.white};\n    //     }\n    // }\n    // svg {\n    //     fill: ${colors.yellow};\n    // }","\nimport { ButtonTag } from \"./button.styled\";\n\nconst Button = (props) => {\n    const { type, buttonView, width, scale, children } = props;\n\n    return (\n        <ButtonTag  {...props} type={type} buttonView={buttonView} width={width} scale={scale}>\n            {children}\n        </ButtonTag>\n    )\n};\nButton.defaultProps = {\n    type: 'button',\n    buttonView: \"white\",\n    width:\"auto\",\n    scale: \"1\",\n    children: 'NO TEXT ON BUTTON!!!',\n};\n\n\nexport default Button;","import styled from \"@emotion/styled\";\n\nexport const LoaderStyled = styled.div`\n    position: relative;\n    display: flex;\n    // flex-direction: row-reverse;\n    width: 60px;\n    height: 15px;\n    margin-left: auto;\n    margin-right: auto;\n\n    // background: red;\n    // p {\n    //     position: absolute;\n    //     left: -80px;\n    //     width: 220px;\n    // }\n\n\n        \n    @keyframes stepFolowing {\n        0% {\n            opacity: 1;\n        }\n        25% {\n            opacity: 1;\n        }\n        45% {\n            opacity: 1;\n        }\n        55% {\n            opacity: 0;\n        }\n        75% {\n            opacity: 0;\n        }\n        100% {\n            opacity: 0;\n        }\n    }\n    .loader {fill:${({theme})=>theme.colors.blue}};\n    .loader_one {\n        position: absolute;\n        top: -3px;\n        right: 0;\n        width: 15px;\n        height: 15px;\n        // transform: rotateZ(15deg);\n        \n        animation-name: stepFolowing;\n        animation-duration: 2400ms;\n        animation-timing-function: linear;\n        animation-iteration-count: infinite;\n    }\n    .loader_two {\n        position: absolute;\n        top: 3px;\n        right: 15px;\n        width: 15px;\n        height: 15px;\n        // transform: rotateZ(335deg);\n        transform: rotateX(180deg);\n           \n        animation-name: stepFolowing;\n        animation-duration: 2400ms;\n        animation-timing-function: linear;\n        animation-iteration-count: infinite;\n    }\n    .loader_three {\n        position: absolute;\n        top: -3px;\n        right: 30px;\n        width: 15px;\n        height: 15px;\n        // transform: rotateZ(15deg);\n           \n        animation-name: stepFolowing;\n        animation-duration: 2400ms;\n        animation-timing-function: linear;\n        animation-iteration-count: infinite;\n    }\n    .loader_four {\n        position: absolute;\n        top: 3px;\n        right: 45px;\n        width: 15px;\n        height: 15px;\n        // transform: rotateZ(335deg);\n        transform: rotateX(180deg);\n             \n        animation-name: stepFolowing;\n        animation-duration: 2400ms;\n        animation-timing-function: linear;\n        animation-iteration-count: infinite;\n    }\n`;","import { useState } from \"react\";\n\nimport { LoaderStyled } from \"./loader.styled\";\nimport paw from \"../../../img/icons/svg_sprite.svg\"\n\n\nconst Loader = ({ isUndefind = true }) => {\n    const [stepOne, setStepOne] = useState(false);\n    const [stepTwo, setStepTwo] = useState(false);\n    const [stepThree, setStepThree] = useState(false);\n    const [stepFour, setStepFour] = useState(false);\n\n    setTimeout(() => {\n        setStepOne(true);\n    }, 300);\n    setTimeout(() => {\n        setStepTwo(true);\n    }, 600);\n    setTimeout(() => {\n        setStepThree(true);\n    }, 900);\n    setTimeout(() => {\n        setStepFour(true);\n    }, 1200);\n    // console.log(\"isUndefind|-->\",isUndefind);\n\n    return (\n        <LoaderStyled>\n            {/* {!Boolean(isUndefind) && <p>Sorry, something goin wrong with backend! It's need some time...</p>} */}\n\n            {stepOne &&\n                <svg className=\"loader loader_one\">\n                    <use href={`${paw}#icon-paw_full_stright`}></use>\n                </svg>\n            }\n            {stepTwo &&\n                <svg className=\"loader loader_two\">\n                    <use href={`${paw}#icon-paw_full_stright`}></use>\n                </svg>\n            }\n            {stepThree &&\n                <svg className=\"loader loader_three\">\n                    <use href={`${paw}#icon-paw_full_stright`}></use>\n                </svg>\n            }\n            {stepFour &&\n                <svg className=\"loader loader_four\">\n                    <use href={`${paw}#icon-paw_full_stright`}></use>\n                </svg>\n            }\n        </LoaderStyled>\n    )\n};\n\n\nexport default Loader;","import styled from \"@emotion/styled\";\n\nexport const TitleOneStyles = styled.h1`\n    margin: 0;\n\n    @media (min-width: 768px) {\n        font-size: 68px;\n        line-height: calc(100 / 68);\n    }\n\n    @media (min-width: 1280px) {\n        font-weight: 800;\n        line-height: 130%;\n    }\n`;\n\nexport const TitleTwoStyles = styled.h2`\n    margin: 0;\n\n    // font-weight: 700; -\n    // font-size: 24px; -\n    // line-height: 33px -\n\n@media (min-width: 768px) {\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 130%;\n}\n@media (min-width: 1280px) {}\n`;\n\nexport const TitleTwoMainStyles = styled.h2`\n    margin: 0;\n\n    // font-weight: 700; -\n    // font-size: 24px; -\n    // line-height: 33px; -\n\n@media (min-width: 768px) {\n    // font-weight: 700; -\n    font-size: 48px;\n    line-height: calc(66 / 48);\n}\n@media (min-width: 1280px) {\n    // font-weight: 700;\n    // font-size: 48px;\n    // line-height: 66px;\n}\n`;\n\nexport const TitleTwoAuthStyles = styled.h2`\n    margin: 0;\n\n    font-weight: 500;\n    // font-size: 24px; -\n    // line-height: 33px; -\n\n@media (min-width: 768px) {\n    // font-weight: 500;\n    font-size: 36px;\n    line-height: 49px;\n}\n@media (min-width: 1280px) {\n    // font-weight: 500;\n    // font-size: 36px;\n    // line-height: 49px;\n    letter-spacing: 0.04em;\n}\n`;\n\nexport const TitleThreeUserStyles = styled.h3`\n    margin: 0;\n\n    font-weight: 500;\n    font-size: 20px;\n    line-height: calc(27 / 20);\n\n@media (min-width: 768px) {\n    // font-weight: 500;\n    font-size: 28px;\n    line-height: calc(38 / 28);\n}\n@media (min-width: 1280px) {\n    // font-weight: 500;\n    // font-size: 28px;\n    // line-height: 38px;\n}\n`;\n\nexport const TitleThreeCardStyles = styled.h3`\n    margin: 0;\n    text-align: left;\n\n    font-size: 24px; \n    letter-spacing: -0.01em;\n\n@media (min-width: 768px) {\n}\n@media (min-width: 1280px) {\n}\n`;","import { TitleOneStyles } from \"./titleViews.styled\";\n\n\nconst TitleOne = (children) => {\n    return (\n        <TitleOneStyles>\n            {children}\n        </TitleOneStyles>\n    )\n};\n\n\nexport default TitleOne;","import { TitleTwoMainStyles } from \"./titleViews.styled\";\n\n\nconst TitleTwoMain = (children) => {\n    return (\n        <TitleTwoMainStyles>\n            {children}\n        </TitleTwoMainStyles>\n    )\n};\n\n\nexport default TitleTwoMain;","// TitleTwoAuth\nimport { TitleTwoAuthStyles } from \"./titleViews.styled\";\n\n\nconst TitleTwoAuth = (children) => {\n    return (\n        <TitleTwoAuthStyles>\n            {children}\n        </TitleTwoAuthStyles>\n    )\n};\n\n\nexport default TitleTwoAuth;","import { TitleTwoStyles } from \"./titleViews.styled\";\n\n\nconst TitleTwoError = (children) => {\n    return (\n        <TitleTwoStyles>\n            {children}\n        </TitleTwoStyles>\n    )\n};\n\n\nexport default TitleTwoError;","// TitleThreeUser\nimport { TitleThreeUserStyles } from \"./titleViews.styled\";\n\n\nconst TitleThreeUser = (children) => {\n    return (\n        <TitleThreeUserStyles>\n            {children}\n        </TitleThreeUserStyles>\n    )\n};\n\n\nexport default TitleThreeUser;","import { TitleThreeCardStyles } from \"./titleViews.styled\";\n\n\nconst TitleThreeMainCard = (children) => {\n    return (\n        <TitleThreeCardStyles>\n            {children}\n        </TitleThreeCardStyles>\n    )\n};\n\n\nexport default TitleThreeMainCard;","import TitleOne from \"./TitlesView/TitleOne\";\nimport TitleTwoMain from \"./TitlesView/TitleTwoMain\";\nimport TitleTwoAuth from \"./TitlesView/TitleTwoAuth\";\nimport TitleTwoError from \"./TitlesView/TitleTwoError\";\nimport TitleThreeUser from \"./TitlesView/TitleThreeUser\";\nimport TitleThreeMainCard from \"./TitlesView/TitleThreeMainCard\";\n\n\nconst Title = (props) => {\n    const { children, titleStyle } = props;\n\n    if (titleStyle === \"h1\") return TitleOne(children);\n    if (titleStyle === \"h2_main\") return TitleTwoMain(children);\n    if (titleStyle === \"h2_auth\") return TitleTwoAuth(children);\n    if (titleStyle === \"h2_404\") return TitleTwoError(children);\n    if (titleStyle === \"h3_user\") return TitleThreeUser(children);\n    if (titleStyle === \"h3_main_card\") return TitleThreeMainCard(children);\n    else return TitleTwoMain(children);\n};\nTitle.defaultProps = {\n    titleStyle: 'h2_main',\n};\n\n\nexport default Title;","import styled from \"@emotion/styled\";\nimport { Form } from \"formik\";\n\nexport const AuthPageStyled = styled.div`\n    display:flex;\n    align-items: center;\n\n    min-height: calc(100vh - 60px);\n\n    > div {\n        box-sizing: border-box;\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        width: 280px;\n        // height: 400px;\n        padding: 40px 12px;\n        margin-left: auto;\n        margin-right: auto;\n\n        text-align: center;\n\n        border-radius: 20px;\n        background: ${({ theme }) => theme.colors.pureWhite};\n        box-shadow: ${({ theme }) => theme.shadows.small};\n        \n        .auth_bottom_text {\n            margin: 0;\n            margin-top: auto;\n\n            font-weight: 500;\n            font-size: 12px;\n            line-height: 1.37;\n            letter-spacing: 0.04em;\n            color: ${({ theme }) => theme.colors.gray};\n\n            a {\n                color: ${({ theme }) => theme.colors.blue};\n                \n                :focus {\n                    outline-color: ${({ theme }) => theme.colors.yellow};\n                }\n            }\n        }\n    }\n@media (min-width: 768px) {\n\n    > div {\n        width: 608px;\n        height: 482px;\n    }\n}\n`;\n\nexport const FormStyled = styled(Form)`\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    min-height: 250px;\n    margin: 40px 0;\n\n    > div {\n        display: flex;\n        flex-direction: column;\n        gap:24px;\n        margin-bottom: 40px;\n    }\n    button {\n        width: 256px;\n\n        :focus {\n            outline-color: ${({ theme }) => theme.colors.yellow};\n        }\n    }\n@media (min-width: 768px) {\n\n    button {\n        width: 458px;\n    }\n}\n`;\n//padding: 60px 75px;","export const fields = {\n    email: {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        required: true,\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password(min 8)\",\n        required: true,\n    },\n    confirmPassword: {\n        type: \"password\",\n        name: \"confirm\",\n        placeholder: \"Confirm password\",\n        required: true,\n    },\n};","export const initialValues = {\n    email: '',\n    password: '',\n    confirm: '',\n};","import * as Yup from 'yup';\n\nexport const regSchema = Yup.object().shape({\n    email: Yup.string().required().nullable().email('Enter a valid Email').trim(),\n    password: Yup.string().required('Password is unsecure').nullable().min(8,'min value 8').max(16,'max value 16').trim(),\n    confirm: Yup.string().required('Password is unsecure').oneOf([Yup.ref('password'), null], 'Passwords must match'),\n});\nexport const logSchema = Yup.object().shape({\n    email: Yup.string().required().nullable().email('Enter a valid Email').trim(),\n    password: Yup.string().required('Password is unsecure').nullable().min(8,'min value 8').max(16,'max value 16').trim(),\n});","import styled from \"@emotion/styled\";\n\nconst fieldColor = ({theme, isError, isValidField}) => {\n    if (isValidField) return theme.colors.green;\n    else return isError ? theme.colors.red : theme.colors.blue;\n};\n// const inputTextColor = ({theme, isError, isValidField}) => {\n//     if (isValidField) return theme.colors.green;\n//     else return isError ? theme.colors.red : theme.colors.gray;\n// };\n\nexport const TextFieldStyled = styled.div`\n    position: relative;\n\n    color: ${({ theme }) => theme.colors.red};\n\n    input {\n        box-sizing: border-box;\n\n        width: 256px;\n        height: 48px;\n        padding: 0 16px;\n\n        font-size: 16px;\n\n        color: ${({ theme }) => theme.colors.grayInput};\n        background: ${({ theme }) => theme.colors.whiteInput};\n        border: 1px solid ${fieldColor};\n        border-radius: 40px;\n\n        ::placeholder {\n            font-size: 16px;\n            color: ${({ theme }) => theme.colors.grayInput};\n        }\n        :focus {\n            outline-color: ${({ theme }) => theme.colors.yellow};\n        }\n    }\n    > div:first-of-type {\n        position: absolute;\n        top: 12px;\n        right: 12px;\n\n        display: flex;\n        gap: 8px;\n\n        svg {\n            cursor: pointer;\n        }\n    }\n@media (min-width: 768px) {\n    \n    input {\n        width: 458px;\n    }\n}\n`;\n\nexport const ErrField = styled.div`\n    position: absolute;\n    left: 16px;\n\n    font-size: 12px;\n\n    color: ${({ theme }) => theme.colors.red};\n`;\n\nexport const CongratsStyled = styled.div`\n    width: 280px;\n    height: 288px;\n`;","import { Field, ErrorMessage, useFormikContext, getIn } from \"formik\";\nimport { useMemo, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport { TextFieldStyled } from \"./elements.styled\";\nimport Icon from \"components/shares/Icon/Icon\";\nimport { ErrField } from \"./elements.styled\";\n\n\nconst TextField = ({ name, type, ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const [toggleEye, setToggleEye] = useState(false);\n    const { values, setFieldValue, errors, setErrors, validateForm } = useFormikContext();//setTouched touched\n    const id = useMemo(() => nanoid(), []);\n\n\n    const toggleEyeView = () => {\n        setToggleEye(prev => !prev);\n    }\n    const onHandleChange = (e) => {\n        const { value } = e.target;\n\n        setFieldValue(name, value);\n        // setTouched({ ...setTouched, [name]: \"\" });\n        setErrors({ ...errors, [name]: \"\" });\n    };\n    const onHandleFocus = () => {\n        setIsVisible(true);\n        setErrors({ ...errors, [name]: \"\" });\n    }\n    const onHandleBlur = () => {\n        validateForm()\n        setTimeout(() => {\n            setIsVisible(false);\n        }, 100);\n    }\n    const deleteValue = () => {\n        setFieldValue(name, \"\");\n        // setTouched({ ...setTouched, [name]: \"\" });\n        setErrors({ ...errors, [name]: \"\" });\n        setToggleEye(false);\n    };\n\n    const isError = Boolean(getIn(errors, name));// && getIn(touched, name)\n    const isEmptyField = Boolean(values[name] === \"\");\n    const hasEyeClosed = name !== \"email\";\n    const isEyeClosed = !toggleEye;\n    const isPasswordVisible = !toggleEye ? \"password\" : \"text\";\n    const isValidField = errors[name] === undefined;\n\n    // console.log(\"isEmptyField|-->\", isEmptyField,name);\n    // console.log(\"isError     |-->\", isError,name);\n    // console.log(\"errors      |-->\", errors);\n    // console.log(\"getIn(touched, name)|-->\", useFormikContext());\n\n    return (\n        <TextFieldStyled\n            isError={!isEmptyField ? isError : null}\n            isValidField={isEmptyField ? false : isValidField}\n        >\n            <Field id={id} {...props}\n                onChange={onHandleChange}\n                onFocus={onHandleFocus}\n                onBlur={onHandleBlur}\n                name={name}\n                type={type === \"email\" ? type : isPasswordVisible}\n                value={values[name]}\n            />\n            <div>\n                {!isEmptyField && !isVisible && isValidField && <Icon onClick={deleteValue} id=\"okey\" colorStroke=\"green\" />}\n                {!isEmptyField && isVisible && <Icon onClick={deleteValue} id=\"cross_big\" colorStroke=\"red\" />}\n\n                {hasEyeClosed && isEyeClosed && <Icon onClick={toggleEyeView} id=\"eye_closed\" />}\n                {hasEyeClosed && !isEyeClosed && <Icon onClick={toggleEyeView} id=\"eye_open\" />}\n            </div>\n                \n            {!isEmptyField && isError && <ErrorMessage name={name} component={ErrField} />}\n        </TextFieldStyled>\n    )\n};\n//\n\nexport default TextField;","import { useNavigate } from \"react-router-dom\";\n\nimport { AuthPageStyled, FormStyled } from \"./authPage.styled\";\nimport Title from \"components/shares/Title/Title\";\n\nimport { Formik } from 'formik';\nimport { fields, initialValues, regSchema, logSchema } from \"./data\";\nimport TextField from \"./elements/TextField\";\nimport Button from \"components/shares/Button/Button\";\n\n\nconst AuthBox = ({ children, forWhat, handleSignup }) => {\n    const navigate = useNavigate();\n\n    const onSubmitSignup = (data, actions) => {\n        // let { email, password } = data;\n        console.log(\"SubmData:\", data);\n\n        // handleSignup({ email, password });\n        navigate('/user');\n        // actions.resetForm();\n    };\n\n    return (\n        <AuthPageStyled>\n            <div>\n                <Title titleStyle=\"h2_auth\">{forWhat}</Title>\n\n                <Formik\n                    onSubmit={onSubmitSignup}\n                    initialValues={initialValues}\n                    validationSchema={forWhat === \"Registration\" ? regSchema : logSchema}\n                    validateOnChange={false}\n                    validateOnBlur={true}\n                >\n                    <FormStyled>\n                        <div>\n                            <TextField {...fields.email} />\n                            <TextField {...fields.password} />\n                            {forWhat === \"Registration\" && <TextField {...fields.confirmPassword} />}\n                        </div>\n\n                        <Button buttonView=\"blue\" type=\"submit\">{forWhat}</Button>\n                    </FormStyled>\n                </Formik>\n\n                {children}\n            </div>\n        </AuthPageStyled>\n    )\n};\n\n\nexport default AuthBox;","import { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signUp } from \"../redux/auth-operations\";\n\n// import { RegPageStyled } from \"./regPage.styled\";\nimport AuthBox from \"../AuthBox\";\nimport Loader from \"components/shares/Loader/Loader\";\n\n\nconst RegPage = () => {\n    const { loading, error } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    const handleSignup = (data) => {\n        dispatch(signUp(data));\n    };\n\n    const errStroke = (error) => {\n        if (!error) return;\n        \n        switch (error.status) {\n            case 400:\n                return <p style={{ color: \"#F43F5E\", marginTop:\"0px\" }}>{`Sorry! ${error.status}: Invalid request body`}</p>\n            case 409:\n                return <p style={{ color: \"#F43F5E\", marginTop:\"0px\" }}>{`Sorry! ${error.status}: Email in use`}</p>\n            case 500:\n                return <p style={{ color: \"#F43F5E\", marginTop:\"0px\" }}>{`Sorry! ${error.status}: Server error`}</p>\n\n            default:\n                break;\n        }\n    };\n\n    return (\n        <>\n            <AuthBox forWhat=\"Registration\" handleSignup={handleSignup}>\n                {errStroke(error)}\n                {loading && <Loader />}\n                \n                <p className=\"auth_bottom_text\">\n                    {\"Already have an account?\"}\n                    <Link to=\"/login\"> Login</Link>\n                </p>\n            </AuthBox>\n        </>\n    )\n};\n\n\nexport default RegPage;"],"names":["whiteBtnStyles","colors","blue","white","gradBlue","ButtonTag","styled","width","buttonView","theme","blueBtnStyles","yellow","yellowBtnStyles","scale","Button","props","type","children","defaultProps","LoaderStyled","isUndefind","useState","stepOne","setStepOne","stepTwo","setStepTwo","stepThree","setStepThree","stepFour","setStepFour","setTimeout","className","href","paw","TitleOneStyles","TitleTwoStyles","TitleTwoMainStyles","TitleTwoAuthStyles","TitleThreeUserStyles","TitleThreeCardStyles","Title","titleStyle","TitleOne","TitleTwoMain","TitleTwoAuth","TitleTwoError","TitleThreeUser","TitleThreeMainCard","AuthPageStyled","pureWhite","shadows","small","gray","FormStyled","Form","fields","name","placeholder","required","initialValues","email","password","confirm","regSchema","Yup","shape","nullable","trim","min","max","oneOf","logSchema","TextFieldStyled","red","grayInput","whiteInput","isError","isValidField","green","ErrField","isVisible","setIsVisible","toggleEye","setToggleEye","useFormikContext","values","setFieldValue","errors","setErrors","validateForm","id","useMemo","nanoid","toggleEyeView","prev","deleteValue","Boolean","getIn","isEmptyField","hasEyeClosed","isEyeClosed","isPasswordVisible","undefined","onChange","e","value","target","onFocus","onBlur","Icon","onClick","colorStroke","component","forWhat","navigate","handleSignup","useNavigate","onSubmit","data","actions","console","log","validationSchema","validateOnChange","validateOnBlur","useSelector","state","auth","loading","error","dispatch","useDispatch","signUp","status","style","color","marginTop","errStroke","to"],"sourceRoot":""}