{"version":3,"file":"static/js/708.ddbb7068.chunk.js","mappings":"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","sources":["components/shares/Button/buttonStyles/whiteBtnStyles.js","components/shares/Button/button.styled.js","components/shares/Button/buttonStyles/blueBtnStyles.js","components/shares/Button/buttonStyles/yellowBtnStyles.js","components/shares/Button/buttonStyles/closeBtnStyles.js","components/shares/Button/Button.jsx","components/shares/Title/TitlesView/titleViews.styled.js","components/shares/Title/TitlesView/TitleOne.jsx","components/shares/Title/TitlesView/TitleTwoMain.jsx","components/shares/Title/TitlesView/TitleTwoAuth.jsx","components/shares/Title/TitlesView/TitleTwoError.jsx","components/shares/Title/TitlesView/TitleThreeUser.jsx","components/shares/Title/TitlesView/TitleThreeMainCard.jsx","components/shares/Title/Title.jsx","pages/AuthPages/authPage.styled.js","pages/AuthPages/data/fields.js","pages/AuthPages/data/initialValues.js","pages/AuthPages/data/regSchema.js","pages/AuthPages/elements/textField.styled.js","pages/AuthPages/elements/errorField.styled.js","pages/AuthPages/elements/TextField.jsx","pages/AuthPages/AuthBox.jsx","pages/AuthPages/RegPage/RegPage.jsx"],"sourcesContent":["// тут прописуються стилі для БІЛОЇ кнопки!\n\nexport const whiteBtnStyles = ({ colors }) => `\n    padding: 8px 20px;\n    border: 2px solid ${colors.blue};\n    color:${colors.blue};\n    background: ${colors.white};\n\n    :hover, :focus {\n        padding: 10px 22px;\n        color:${colors.white};\n        background: ${colors.gradBlue};\n        border: none;\n    }\n`;","import styled from \"@emotion/styled\";\n\nimport { whiteBtnStyles, blueBtnStyles, yellowBtnStyles, closeBtnStyles } from \"./buttonStyles\";\n\n\nconst switchTheme = ({buttonView, theme}) => {\n\n    switch (buttonView) {\n        case \"white\":\n            return whiteBtnStyles(theme);\n        case \"blue\":\n            return blueBtnStyles(theme);\n        case \"yellow\":\n            return yellowBtnStyles(theme);\n        case \"close\":\n            return closeBtnStyles();\n    \n        default:\n            return whiteBtnStyles(theme);\n    };\n};\n\nexport const ButtonTag = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width:${({width})=>width};\n\n    border-radius: 40px;\n    font-family: inherit;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: calc(22 / 16);\n    letter-spacing: 0.04em;\n    cursor: pointer;\n\n    transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    ${switchTheme}\n\n\n    :active {\n    }\n    :hover, :focus {\n        transform: scale(${({scale})=>scale});\n    }\n`;","// тут прописуються стилі для СИНЬОЇ кнопки!\n\nexport const blueBtnStyles = ({ colors }) => `\n    padding: 8px 20px;\n    border: 2px solid ${colors.blue};\n    color:${colors.white};\n    background: ${colors.blue};\n\n    :hover, :focus {\n        padding: 10px 22px;\n        color:${colors.white};\n        background: ${colors.gradBlue};\n        border: none;\n    }\n`;","// тут прописуються стилі для ЖОВТОЇ кнопки!\n\nexport const yellowBtnStyles = ({ colors }) => `\n    padding: 8px 20px;\n    border: 2px solid ${colors.yellow};\n    color:${colors.yellow};\n    background: ${colors.white};\n\n    :hover, :focus {\n        padding: 10px 22px;\n        color:${colors.white};\n        background: ${colors.yellow};\n        border: none;\n    }\n`;","export const closeBtnStyles = () => `\n    width: auto;\n    height: auto;\n    padding: 0;\n    border: 50%;\n    border: none;\n    background: rgba(0,0,0,0);\n`;\n\n\n    // transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    // :hover, :focus {\n    //     transform: scale(1.3);\n    //     background: ${colors.yellow};\n    //     svg {\n    //         fill: ${colors.white};\n    //     }\n    // }\n    // svg {\n    //     fill: ${colors.yellow};\n    // }","\nimport { ButtonTag } from \"./button.styled\";\n\nconst Button = (props) => {\n    const { type, buttonView, width, scale, children } = props;\n\n    return (\n        <ButtonTag  {...props} type={type} buttonView={buttonView} width={width} scale={scale}>\n            {children}\n        </ButtonTag>\n    )\n};\nButton.defaultProps = {\n    type: 'button',\n    buttonView: \"white\",\n    width:\"auto\",\n    scale: \"1\",\n    children: 'NO TEXT ON BUTTON!!!',\n};\n\n\nexport default Button;","import styled from \"@emotion/styled\";\n\nexport const TitleOneStyles = styled.h1`\n    margin: 0;\n\n    @media (min-width: 768px) {\n        font-size: 68px;\n        line-height: calc(100 / 68);\n    }\n\n    @media (min-width: 1280px) {\n        font-weight: 800;\n        line-height: 130%;\n    }\n`;\n\nexport const TitleTwoStyles = styled.h2`\n    margin: 0;\n\n    // font-weight: 700; -\n    // font-size: 24px; -\n    // line-height: 33px -\n\n@media (min-width: 768px) {\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 130%;\n}\n@media (min-width: 1280px) {}\n`;\n\nexport const TitleTwoMainStyles = styled.h2`\n    margin: 0;\n\n    // font-weight: 700; -\n    // font-size: 24px; -\n    // line-height: 33px; -\n\n@media (min-width: 768px) {\n    // font-weight: 700; -\n    font-size: 48px;\n    line-height: calc(66 / 48);\n}\n@media (min-width: 1280px) {\n    // font-weight: 700;\n    // font-size: 48px;\n    // line-height: 66px;\n}\n`;\n\nexport const TitleTwoAuthStyles = styled.h2`\n    margin: 0;\n\n    font-weight: 500;\n    // font-size: 24px; -\n    // line-height: 33px; -\n\n@media (min-width: 768px) {\n    // font-weight: 500;\n    font-size: 36px;\n    line-height: 49px;\n}\n@media (min-width: 1280px) {\n    // font-weight: 500;\n    // font-size: 36px;\n    // line-height: 49px;\n    letter-spacing: 0.04em;\n}\n`;\n\nexport const TitleThreeUserStyles = styled.h3`\n    margin: 0;\n\n    font-weight: 500;\n    font-size: 20px;\n    line-height: calc(27 / 20);\n\n@media (min-width: 768px) {\n    // font-weight: 500;\n    font-size: 28px;\n    line-height: calc(38 / 28);\n}\n@media (min-width: 1280px) {\n    // font-weight: 500;\n    // font-size: 28px;\n    // line-height: 38px;\n}\n`;\n\nexport const TitleThreeCardStyles = styled.h3`\n    margin: 0;\n    text-align: left;\n\n    font-size: 24px; \n    letter-spacing: -0.01em;\n\n@media (min-width: 768px) {\n}\n@media (min-width: 1280px) {\n}\n`;","import { TitleOneStyles } from \"./titleViews.styled\";\n\n\nconst TitleOne = (children) => {\n    return (\n        <TitleOneStyles>\n            {children}\n        </TitleOneStyles>\n    )\n};\n\n\nexport default TitleOne;","import { TitleTwoMainStyles } from \"./titleViews.styled\";\n\n\nconst TitleTwoMain = (children) => {\n    return (\n        <TitleTwoMainStyles>\n            {children}\n        </TitleTwoMainStyles>\n    )\n};\n\n\nexport default TitleTwoMain;","// TitleTwoAuth\nimport { TitleTwoAuthStyles } from \"./titleViews.styled\";\n\n\nconst TitleTwoAuth = (children) => {\n    return (\n        <TitleTwoAuthStyles>\n            {children}\n        </TitleTwoAuthStyles>\n    )\n};\n\n\nexport default TitleTwoAuth;","import { TitleTwoStyles } from \"./titleViews.styled\";\n\n\nconst TitleTwoError = (children) => {\n    return (\n        <TitleTwoStyles>\n            {children}\n        </TitleTwoStyles>\n    )\n};\n\n\nexport default TitleTwoError;","// TitleThreeUser\nimport { TitleThreeUserStyles } from \"./titleViews.styled\";\n\n\nconst TitleThreeUser = (children) => {\n    return (\n        <TitleThreeUserStyles>\n            {children}\n        </TitleThreeUserStyles>\n    )\n};\n\n\nexport default TitleThreeUser;","import { TitleThreeCardStyles } from \"./titleViews.styled\";\n\n\nconst TitleThreeMainCard = (children) => {\n    return (\n        <TitleThreeCardStyles>\n            {children}\n        </TitleThreeCardStyles>\n    )\n};\n\n\nexport default TitleThreeMainCard;","import TitleOne from \"./TitlesView/TitleOne\";\nimport TitleTwoMain from \"./TitlesView/TitleTwoMain\";\nimport TitleTwoAuth from \"./TitlesView/TitleTwoAuth\";\nimport TitleTwoError from \"./TitlesView/TitleTwoError\";\nimport TitleThreeUser from \"./TitlesView/TitleThreeUser\";\nimport TitleThreeMainCard from \"./TitlesView/TitleThreeMainCard\";\n\n\nconst Title = (props) => {\n    const { children, titleStyle } = props;\n\n    if (titleStyle === \"h1\") return TitleOne(children);\n    if (titleStyle === \"h2_main\") return TitleTwoMain(children);\n    if (titleStyle === \"h2_auth\") return TitleTwoAuth(children);\n    if (titleStyle === \"h2_404\") return TitleTwoError(children);\n    if (titleStyle === \"h3_user\") return TitleThreeUser(children);\n    if (titleStyle === \"h3_main_card\") return TitleThreeMainCard(children);\n    else return TitleTwoMain(children);\n};\nTitle.defaultProps = {\n    titleStyle: 'h2_main',\n};\n\n\nexport default Title;","import styled from \"@emotion/styled\";\nimport { Form } from \"formik\";\n\nexport const AuthPageStyled = styled.div`\n    display:flex;\n    align-items: center;\n\n    min-height: calc(100vh - 60px);\n\n    > div {\n        box-sizing: border-box;\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        width: 280px;\n        // height: 400px;\n        padding: 40px 12px;\n        margin-left: auto;\n        margin-right: auto;\n\n        text-align: center;\n\n        border-radius: 20px;\n        background: ${({ theme }) => theme.colors.pureWhite};\n        box-shadow: ${({ theme }) => theme.shadows.small};\n        \n        .auth_bottom_text {\n            margin: 0;\n            margin-top: auto;\n\n            font-weight: 500;\n            font-size: 12px;\n            line-height: 1.37;\n            letter-spacing: 0.04em;\n            color: ${({ theme }) => theme.colors.gray};\n\n            a {\n                color: ${({ theme }) => theme.colors.blue};\n                \n                :focus {\n                    outline-color: ${({ theme }) => theme.colors.yellow};\n                }\n            }\n        }\n    }\n@media (min-width: 768px) {\n\n    > div {\n        width: 608px;\n        height: 482px;\n    }\n}\n`;\n\nexport const FormStyled = styled(Form)`\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    min-height: 250px;\n    margin: 40px 0;\n\n    > div {\n        display: flex;\n        flex-direction: column;\n        gap:24px;\n        margin-bottom: 40px;\n    }\n    button {\n        width: 256px;\n\n        :focus {\n            outline-color: ${({ theme }) => theme.colors.yellow};\n        }\n    }\n@media (min-width: 768px) {\n\n    button {\n        width: 458px;\n    }\n}\n`;\n//padding: 60px 75px;","export const fields = {\n    email: {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        required: true,\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password(min 8)\",\n        required: true,\n    },\n    confirmPassword: {\n        type: \"password\",\n        name: \"confirm\",\n        placeholder: \"Confirm password\",\n        required: true,\n    },\n};","export const initialValues = {\n    email: '',\n    password: '',\n    confirm: '',\n};","import * as Yup from 'yup';\n\nexport const regSchema = Yup.object().shape({\n    email: Yup.string().required().nullable().email('Enter a valid Email').trim(),\n    password: Yup.string().required('Password is unsecure').nullable().min(8,'min value 8').max(16,'max value 16').trim(),\n    confirm: Yup.string().required('Password is unsecure').oneOf([Yup.ref('password'), null], 'Passwords must match'),\n});","import styled from \"@emotion/styled\";\n\nconst fieldColor = ({theme, isError, isValidField}) => {\n    if (isValidField) return theme.colors.green;\n    else return isError ? theme.colors.red : theme.colors.blue;\n};\n// const inputTextColor = ({theme, isError, isValidField}) => {\n//     if (isValidField) return theme.colors.green;\n//     else return isError ? theme.colors.red : theme.colors.gray;\n// };\n\nexport const TextFieldStyled = styled.div`\n    position: relative;\n\n    color: ${({ theme }) => theme.colors.red};\n\n    input {\n        box-sizing: border-box;\n\n        width: 256px;\n        height: 48px;\n        padding: 0 16px;\n\n        font-size: 16px;\n\n        color: ${({ theme }) => theme.colors.gray};\n        background: ${({ theme }) => theme.colors.whiteInput};\n        border: 1px solid ${fieldColor};\n        border-radius: 40px;\n\n        ::placeholder {\n            font-size: 16px;\n            color: ${({ theme }) => theme.colors.grayInput};\n        }\n        :focus {\n            outline-color: ${({ theme }) => theme.colors.yellow};\n        }\n    }\n    > div:first-of-type {\n        position: absolute;\n        top: 12px;\n        right: 12px;\n\n        display: flex;\n        gap: 8px;\n\n        svg {\n            cursor: pointer;\n        }\n    }\n@media (min-width: 768px) {\n    \n    input {\n        width: 458px;\n    }\n}\n`;\n//({ theme, isError }) => isError ? theme.colors.red : theme.colors.blue","import styled from \"@emotion/styled\";\n\nexport const ErrField = styled.div`\n    position: absolute;\n    left: 16px;\n\n    font-size: 12px;\n\n    color: ${({ theme }) => theme.colors.red};\n`;","import { Field, ErrorMessage, useFormikContext, getIn } from \"formik\";\nimport { useMemo, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport { TextFieldStyled } from \"./textField.styled\";\nimport Icon from \"components/shares/Icon/Icon\";\nimport { ErrField } from \"./errorField.styled\";\n\n\nconst TextField = ({ name, type, ...props }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const [toggleEye, setToggleEye] = useState(false);\n    const { values, setFieldValue, errors, setErrors, validateForm } = useFormikContext();//setTouched touched\n    const id = useMemo(() => nanoid(), []);\n\n\n    const toggleEyeView = () => {\n        setToggleEye(prev => !prev);\n    }\n    const onHandleChange = (e) => {\n        const { value } = e.target;\n\n        setFieldValue(name, value);\n        // setTouched({ ...setTouched, [name]: \"\" });\n        setErrors({ ...errors, [name]: \"\" });\n    };\n    const onHandleFocus = () => {\n        setIsVisible(true);\n        setErrors({ ...errors, [name]: \"\" });\n    }\n    const onHandleBlur = () => {\n        validateForm()\n        setTimeout(() => {\n            setIsVisible(false);\n        }, 100);\n    }\n    const deleteValue = () => {\n        setFieldValue(name, \"\");\n        // setTouched({ ...setTouched, [name]: \"\" });\n        setErrors({ ...errors, [name]: \"\" });\n        setToggleEye(false);\n    };\n\n    const isError = Boolean(getIn(errors, name));// && getIn(touched, name)\n    const isEmptyField = Boolean(values[name] === \"\");\n    const hasEyeClosed = name !== \"email\";\n    const isEyeClosed = !toggleEye;\n    const isPasswordVisible = !toggleEye ? \"password\" : \"text\";\n    const isValidField = errors[name] === undefined;\n\n    // console.log(\"isEmptyField|-->\", isEmptyField,name);\n    // console.log(\"isError     |-->\", isError,name);\n    // console.log(\"errors      |-->\", errors);\n    // console.log(\"getIn(touched, name)|-->\", useFormikContext());\n\n    return (\n        <TextFieldStyled\n            isError={!isEmptyField ? isError : null}\n            isValidField={isEmptyField ? false : isValidField}\n        >\n            <Field id={id} {...props}\n                onChange={onHandleChange}\n                onFocus={onHandleFocus}\n                onBlur={onHandleBlur}\n                name={name}\n                type={type === \"email\" ? type : isPasswordVisible}\n                value={values[name]}\n            />\n            <div>\n                {!isEmptyField && !isVisible && isValidField && <Icon onClick={deleteValue} id=\"okey\" colorStroke=\"green\" />}\n                {!isEmptyField && isVisible && <Icon onClick={deleteValue} id=\"cross_big\" colorStroke=\"red\" />}\n\n                {hasEyeClosed && isEyeClosed && <Icon onClick={toggleEyeView} id=\"eye_closed\" />}\n                {hasEyeClosed && !isEyeClosed && <Icon onClick={toggleEyeView} id=\"eye_open\" />}\n            </div>\n                \n            {!isEmptyField && isError && <ErrorMessage name={name} component={ErrField} />}\n        </TextFieldStyled>\n    )\n};\n//\n\nexport default TextField;","import { AuthPageStyled, FormStyled } from \"./authPage.styled\";\nimport Title from \"components/shares/Title/Title\";\n\nimport { Formik } from 'formik';\nimport { fields, initialValues, regSchema } from \"./data\";\nimport TextField from \"./elements/TextField\";\nimport Button from \"components/shares/Button/Button\";\nimport { toast } from 'react-toastify';\n\n\nconst AuthBox = ({ children, forWhat }) => {\n\n    const onSubmitSignup = (data, actions) => {\n        // let { email, password, confirm } = data;\n        // console.log(\"RegData:\", data);\n\n        // dispatch(signUp(personData));\n        // actions.resetForm();\n    };\n    const toastHeart = () => {\n        toast.error('Sorry still not completed!', {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n        });\n    };\n\n    return (\n        <AuthPageStyled>\n            <div>\n                <Title titleStyle=\"h2_auth\">{forWhat}</Title>\n\n                <Formik\n                    onSubmit={onSubmitSignup}\n                    initialValues={initialValues}\n                    validationSchema={regSchema}\n                    validateOnChange={false}\n                    validateOnBlur={true}\n                >\n                    <FormStyled>\n                        <div>\n                            <TextField {...fields.email} />\n                            <TextField {...fields.password} />\n                            {forWhat === \"Registration\" && <TextField {...fields.confirmPassword} />}\n                        </div>\n\n                        <Button onClick={toastHeart} buttonView=\"blue\" type=\"submit\">{forWhat}</Button>\n                    </FormStyled>\n                </Formik>\n\n                {children}\n            </div>\n        </AuthPageStyled>\n    )\n};\n\n\nexport default AuthBox;","import { Link } from \"react-router-dom\";\n\n// import { RegPageStyled } from \"./regPage.styled\";\nimport AuthBox from \"../AuthBox\";\n\n\nconst RegPage = () => {\n    return (\n        <AuthBox forWhat=\"Registration\">\n            <p className=\"auth_bottom_text\">Already have an account?<Link to=\"/login\"> Login</Link></p>\n        </AuthBox>\n    )\n};\n\n\nexport default RegPage;"],"names":["whiteBtnStyles","colors","blue","white","gradBlue","ButtonTag","styled","width","buttonView","theme","blueBtnStyles","yellow","yellowBtnStyles","scale","Button","props","type","children","defaultProps","TitleOneStyles","TitleTwoStyles","TitleTwoMainStyles","TitleTwoAuthStyles","TitleThreeUserStyles","TitleThreeCardStyles","Title","titleStyle","TitleOne","TitleTwoMain","TitleTwoAuth","TitleTwoError","TitleThreeUser","TitleThreeMainCard","AuthPageStyled","pureWhite","shadows","small","gray","FormStyled","Form","fields","name","placeholder","required","initialValues","email","password","confirm","regSchema","Yup","shape","nullable","trim","min","max","oneOf","TextFieldStyled","red","whiteInput","isError","isValidField","green","grayInput","ErrField","useState","isVisible","setIsVisible","toggleEye","setToggleEye","useFormikContext","values","setFieldValue","errors","setErrors","validateForm","id","useMemo","nanoid","toggleEyeView","prev","deleteValue","Boolean","getIn","isEmptyField","hasEyeClosed","isEyeClosed","isPasswordVisible","undefined","onChange","e","value","target","onFocus","onBlur","setTimeout","Icon","onClick","colorStroke","component","forWhat","onSubmit","data","actions","validationSchema","validateOnChange","validateOnBlur","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","className","to"],"sourceRoot":""}