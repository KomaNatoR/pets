{"version":3,"file":"static/js/759.d03a0ed3.chunk.js","mappings":"0MAEaA,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,gEAENA,EAAOC,KAFD,wBAGlBD,EAAOC,KAHW,8BAIZD,EAAOE,MAJK,iFAQdF,EAAOE,MARO,kCASRF,EAAOG,SATC,sCCoBjBC,EAAYC,EAAAA,EAAAA,OAAH,6cAIV,qBAAEC,KAAF,IArBQ,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,MAE9B,OAAQD,GACJ,IAAK,QASL,QACI,OAAOR,EAAeS,GAR1B,IAAK,OACD,OCTiB,SAAC,GAAD,IAAGR,EAAH,EAAGA,OAAH,gEAELA,EAAOC,KAFF,wBAGjBD,EAAOE,MAHU,8BAIXF,EAAOC,KAJI,iFAQbD,EAAOE,MARM,kCASPF,EAAOG,SATA,qCDSVM,CAAcD,GACzB,IAAK,SACD,OEXmB,SAAC,GAAD,IAAGR,EAAH,EAAGA,OAAH,gEAEPA,EAAOU,OAFA,wBAGnBV,EAAOU,OAHY,8BAIbV,EAAOE,MAJM,iFAQfF,EAAOE,MARQ,kCASTF,EAAOU,OATE,qCFWZC,CAAgBH,GAC3B,IAAK,QACD,MGfkB,gIHoB7B,IAuB0B,qBAAEI,KAAF,I,SIxCrBC,EAAS,SAACC,GACZ,IAAQC,EAA6CD,EAA7CC,KAAMR,EAAuCO,EAAvCP,WAAYD,EAA2BQ,EAA3BR,MAAOM,EAAoBE,EAApBF,MAAOI,EAAaF,EAAbE,SAExC,OACI,SAACZ,GAAD,kBAAgBU,GAAhB,IAAuBC,KAAMA,EAAMR,WAAYA,EAAYD,MAAOA,EAAOM,MAAOA,EAAhF,SACKI,IAGZ,EACDH,EAAOI,aAAe,CAClBF,KAAM,SACNR,WAAY,QACZD,MAAM,OACNM,MAAO,IACPI,SAAU,wBAId,O,0FCnBaE,EAAiBb,EAAAA,EAAAA,GAAH,oPAcdc,EAAiBd,EAAAA,EAAAA,GAAH,mQAede,EAAqBf,EAAAA,EAAAA,GAAH,kWAmBlBgB,EAAqBhB,EAAAA,EAAAA,GAAH,+WAoBlBiB,EAAuBjB,EAAAA,EAAAA,GAAH,0VAmBpBkB,EAAuBlB,EAAAA,EAAAA,GAAH,yL,SC7EjC,EATiB,SAACW,GACd,OACI,SAACE,EAAD,UACKF,GAGZ,ECGD,EATqB,SAACA,GAClB,OACI,SAACI,EAAD,UACKJ,GAGZ,ECID,EATqB,SAACA,GAClB,OACI,SAACK,EAAD,UACKL,GAGZ,ECED,EATsB,SAACA,GACnB,OACI,SAACG,EAAD,UACKH,GAGZ,ECID,EATuB,SAACA,GACpB,OACI,SAACM,EAAD,UACKN,GAGZ,ECED,EAT2B,SAACA,GACxB,OACI,SAACO,EAAD,UACKP,GAGZ,ECDKQ,EAAQ,SAACV,GACX,IAAQE,EAAyBF,EAAzBE,SAAUS,EAAeX,EAAfW,WAElB,MAAmB,OAAfA,EAA4BC,EAASV,GACtB,YAAfS,EAAiCE,EAAaX,GAC/B,YAAfS,EAAiCG,EAAaZ,GAC/B,WAAfS,EAAgCI,EAAcb,GAC/B,YAAfS,EAAiCK,EAAed,GACjC,iBAAfS,EAAsCM,EAAmBf,GACjDW,EAAaX,EAC5B,EACDQ,EAAMP,aAAe,CACjBQ,WAAY,WAIhB,O,0GCrBaO,EAAiB3B,EAAAA,EAAAA,IAAH,m6BAsBL,qBAAGG,MAAkBR,OAAOiC,SAA5B,IACA,qBAAGzB,MAAkB0B,QAAQC,KAA7B,IAUD,qBAAG3B,MAAkBR,OAAOoC,IAA5B,IAGI,qBAAG5B,MAAkBR,OAAOC,IAA5B,IAaZoC,GAAahC,EAAAA,EAAAA,GAAOiC,EAAAA,GAAPjC,CAAH,8c,UCpDVkC,EACF,CACHxB,KAAM,QACNyB,KAAM,QACNC,YAAa,QACbC,UAAU,GALLH,EAOC,CACNxB,KAAM,WACNyB,KAAM,WACNC,YAAa,kBACbC,UAAU,GAXLH,EAaQ,CACbxB,KAAM,WACNyB,KAAM,UACNC,YAAa,mBACbC,UAAU,GCjBLC,EAAgB,CACzBC,MAAO,GACPC,SAAU,GACVC,QAAS,I,UCDAC,EAAYC,EAAAA,KAAaC,MAAM,CACxCL,MAAOI,EAAAA,KAAaN,WAAWQ,WAAWN,MAAM,uBAAuBO,OACvEN,SAAUG,EAAAA,KAAaN,SAAS,wBAAwBQ,WAAWE,IAAI,EAAE,eAAeC,IAAI,GAAG,gBAAgBF,OAC/GL,QAASE,EAAAA,KAAaN,SAAS,wBAAwBQ,WAAWE,IAAI,EAAE,eAAeC,IAAI,GAAG,gBAAgBF,S,kDCHrGG,EAAkBjD,EAAAA,EAAAA,IAAH,usBAGf,qBAAGG,MAAkBR,OAAOuD,GAA5B,IAWI,qBAAG/C,MAAkBR,OAAOoC,IAA5B,IACK,qBAAG5B,MAAkBR,OAAOwD,UAA5B,IACM,gBAAGhD,EAAH,EAAGA,MAAH,SAAUiD,SAA0BjD,EAAMR,OAAOuD,IAAM/C,EAAMR,OAAOC,IAApE,IAKP,qBAAGO,MAAkBR,OAAO0D,SAA5B,I,UCrBRC,EAAWtD,EAAAA,EAAAA,IAAH,6GAMR,qBAAGG,MAAkBR,OAAOuD,GAA5B,I,2BCkDb,EAjDkB,SAAC,GAA8B,IAA5Bf,EAA2B,EAA3BA,KAAMzB,EAAqB,EAArBA,KAASD,GAAY,YAC5C,GAAkC8C,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA+DC,EAAAA,EAAAA,MAAvDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,cAAeC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,QAASC,EAAhD,EAAgDA,UAC1CC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAG7BC,EAAgB,WAClBV,GAAa,SAAAW,GAAI,OAAKA,CAAL,GACpB,EAeKC,GAAUC,EAAAA,EAAAA,IAAMT,EAAQ1B,KAASmC,EAAAA,EAAAA,IAAMR,EAAS3B,GAChDoC,EAAYZ,EAAOxB,GACnBqC,EAAwB,UAATrC,EACfsC,GAAejB,EACfkB,EAAqBlB,EAAyB,OAAb,WAKvC,OACI,UAACP,EAAD,CAAiBG,SAAUmB,EAAYF,EAAU,KAAjD,WACI,SAAC,MAAD,gBAAOL,GAAIA,GAAQvD,GAAnB,IACIkE,SA1BW,SAACC,GACpB,IAAQC,EAAUD,EAAEE,OAAZD,MAERjB,EAAczB,EAAM0C,GAEpBd,GAAU,kBAAKF,GAAN,cAAe1B,EAAO,KAClC,EAqBWA,KAAMA,EACNzB,KAAe,UAATA,EAAmBA,EAAOgE,EAChCG,MAAOlB,EAAOxB,MAEjBoC,GAAaC,GAAgBC,IAAe,SAACM,EAAA,EAAD,CAAMC,QAASb,EAAeH,GAAG,eAC7EO,GAAaC,IAAiBC,IAAe,SAACM,EAAA,EAAD,CAAMC,QAASb,EAAeH,GAAG,aAC9EO,IAAa,SAACQ,EAAA,EAAD,CAAMC,QA1BR,WAChBpB,EAAczB,EAAM,IAEpB4B,GAAU,kBAAKF,GAAN,cAAe1B,EAAO,MAC/BsB,GAAa,EAChB,EAqBiDO,GAAG,YAAYiB,YAAY,QACpEV,GAAaF,IAAW,SAAC,KAAD,CAAclC,KAAMA,EAAM+C,UAAW5B,MAGzE,E,UCND,EAxCgB,SAAC,GAA2B,IAAzB3C,EAAwB,EAAxBA,SAAUwE,EAAc,EAAdA,QAUzB,OACI,SAACxD,EAAD,WACI,4BACI,SAACR,EAAA,EAAD,CAAOC,WAAW,UAAlB,SAA6B+D,KAE7B,SAAC,KAAD,CACIC,SAdO,SAACC,EAAMC,GAM7B,EASehD,cAAeA,EACfiD,iBAAkB7C,EAClB8C,kBAAkB,EAClBC,gBAAgB,EALpB,UAOI,UAACzD,EAAD,YACI,4BACI,SAAC,GAAD,UAAeE,KACf,SAAC,GAAD,UAAeA,IACF,iBAAZiD,IAA8B,SAAC,GAAD,UAAejD,QAGlD,SAAC1B,EAAA,EAAD,CAAQN,WAAW,OAAOQ,KAAK,SAA/B,SAAyCyE,SAIhDxE,MAIhB,C,+DC/BD,UATkB,WACd,OACI,SAAC,IAAD,CAASwE,QAAQ,QAAjB,UACI,eAAGO,UAAU,mBAAb,oCAAsD,SAAC,KAAD,CAAMC,GAAG,YAAT,2BAGjE,C","sources":["components/shares/Button/buttonStyles/whiteBtnStyles.js","components/shares/Button/button.styled.js","components/shares/Button/buttonStyles/blueBtnStyles.js","components/shares/Button/buttonStyles/yellowBtnStyles.js","components/shares/Button/buttonStyles/closeBtnStyles.js","components/shares/Button/Button.jsx","components/shares/Title/TitlesView/titleViews.styled.js","components/shares/Title/TitlesView/TitleOne.jsx","components/shares/Title/TitlesView/TitleTwoMain.jsx","components/shares/Title/TitlesView/TitleTwoAuth.jsx","components/shares/Title/TitlesView/TitleTwoError.jsx","components/shares/Title/TitlesView/TitleThreeUser.jsx","components/shares/Title/TitlesView/TitleThreeMainCard.jsx","components/shares/Title/Title.jsx","pages/AuthPages/authPage.styled.js","pages/AuthPages/data/fields.js","pages/AuthPages/data/initialValues.js","pages/AuthPages/data/regSchema.js","pages/AuthPages/elements/textField.styled.js","pages/AuthPages/elements/errorField.styled.js","pages/AuthPages/elements/TextField.jsx","pages/AuthPages/AuthBox.jsx","pages/AuthPages/LoginPage/LoginPage.jsx"],"sourcesContent":["// тут прописуються стилі для БІЛОЇ кнопки!\n\nexport const whiteBtnStyles = ({ colors }) => `\n    padding: 8px 20px;\n    border: 2px solid ${colors.blue};\n    color:${colors.blue};\n    background: ${colors.white};\n\n    :hover, :focus {\n        padding: 10px 22px;\n        color:${colors.white};\n        background: ${colors.gradBlue};\n        border: none;\n    }\n`;","import styled from \"@emotion/styled\";\n\nimport { whiteBtnStyles, blueBtnStyles, yellowBtnStyles, closeBtnStyles } from \"./buttonStyles\";\n\n\nconst switchTheme = ({buttonView, theme}) => {\n\n    switch (buttonView) {\n        case \"white\":\n            return whiteBtnStyles(theme);\n        case \"blue\":\n            return blueBtnStyles(theme);\n        case \"yellow\":\n            return yellowBtnStyles(theme);\n        case \"close\":\n            return closeBtnStyles();\n    \n        default:\n            return whiteBtnStyles(theme);\n    };\n};\n\nexport const ButtonTag = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width:${({width})=>width};\n\n    border-radius: 40px;\n    font-family: inherit;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: calc(22 / 16);\n    letter-spacing: 0.04em;\n    cursor: pointer;\n\n    transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    ${switchTheme}\n\n\n    :active {\n    }\n    :hover, :focus {\n        transform: scale(${({scale})=>scale});\n    }\n`;","// тут прописуються стилі для СИНЬОЇ кнопки!\n\nexport const blueBtnStyles = ({ colors }) => `\n    padding: 8px 20px;\n    border: 2px solid ${colors.blue};\n    color:${colors.white};\n    background: ${colors.blue};\n\n    :hover, :focus {\n        padding: 10px 22px;\n        color:${colors.white};\n        background: ${colors.gradBlue};\n        border: none;\n    }\n`;","// тут прописуються стилі для ЖОВТОЇ кнопки!\n\nexport const yellowBtnStyles = ({ colors }) => `\n    padding: 8px 20px;\n    border: 2px solid ${colors.yellow};\n    color:${colors.yellow};\n    background: ${colors.white};\n\n    :hover, :focus {\n        padding: 10px 22px;\n        color:${colors.white};\n        background: ${colors.yellow};\n        border: none;\n    }\n`;","export const closeBtnStyles = () => `\n    width: auto;\n    height: auto;\n    padding: 0;\n    border: 50%;\n    border: none;\n    background: rgba(0,0,0,0);\n`;\n\n\n    // transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    // :hover, :focus {\n    //     transform: scale(1.3);\n    //     background: ${colors.yellow};\n    //     svg {\n    //         fill: ${colors.white};\n    //     }\n    // }\n    // svg {\n    //     fill: ${colors.yellow};\n    // }","\nimport { ButtonTag } from \"./button.styled\";\n\nconst Button = (props) => {\n    const { type, buttonView, width, scale, children } = props;\n\n    return (\n        <ButtonTag  {...props} type={type} buttonView={buttonView} width={width} scale={scale}>\n            {children}\n        </ButtonTag>\n    )\n};\nButton.defaultProps = {\n    type: 'button',\n    buttonView: \"white\",\n    width:\"auto\",\n    scale: \"1\",\n    children: 'NO TEXT ON BUTTON!!!',\n};\n\n\nexport default Button;","import styled from \"@emotion/styled\";\n\nexport const TitleOneStyles = styled.h1`\n    margin: 0;\n\n    @media (min-width: 768px) {\n        font-size: 68px;\n        line-height: calc(100 / 68);\n    }\n\n    @media (min-width: 1280px) {\n        font-weight: 800;\n        line-height: 130%;\n    }\n`;\n\nexport const TitleTwoStyles = styled.h2`\n    margin: 0;\n\n    // font-weight: 700; -\n    // font-size: 24px; -\n    // line-height: 33px -\n\n@media (min-width: 768px) {\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 130%;\n}\n@media (min-width: 1280px) {}\n`;\n\nexport const TitleTwoMainStyles = styled.h2`\n    margin: 0;\n\n    // font-weight: 700; -\n    // font-size: 24px; -\n    // line-height: 33px; -\n\n@media (min-width: 768px) {\n    // font-weight: 700; -\n    font-size: 48px;\n    line-height: calc(66 / 48);\n}\n@media (min-width: 1280px) {\n    // font-weight: 700;\n    // font-size: 48px;\n    // line-height: 66px;\n}\n`;\n\nexport const TitleTwoAuthStyles = styled.h2`\n    margin: 0;\n\n    font-weight: 500;\n    // font-size: 24px; -\n    // line-height: 33px; -\n\n@media (min-width: 768px) {\n    // font-weight: 500;\n    font-size: 36px;\n    line-height: 49px;\n}\n@media (min-width: 1280px) {\n    // font-weight: 500;\n    // font-size: 36px;\n    // line-height: 49px;\n    letter-spacing: 0.04em;\n}\n`;\n\nexport const TitleThreeUserStyles = styled.h3`\n    margin: 0;\n\n    font-weight: 500;\n    font-size: 20px;\n    line-height: calc(27 / 20);\n\n@media (min-width: 768px) {\n    // font-weight: 500;\n    font-size: 28px;\n    line-height: calc(38 / 28);\n}\n@media (min-width: 1280px) {\n    // font-weight: 500;\n    // font-size: 28px;\n    // line-height: 38px;\n}\n`;\n\nexport const TitleThreeCardStyles = styled.h3`\n    margin: 0;\n    text-align: left;\n\n    font-size: 24px; \n    letter-spacing: -0.01em;\n\n@media (min-width: 768px) {\n}\n@media (min-width: 1280px) {\n}\n`;","import { TitleOneStyles } from \"./titleViews.styled\";\n\n\nconst TitleOne = (children) => {\n    return (\n        <TitleOneStyles>\n            {children}\n        </TitleOneStyles>\n    )\n};\n\n\nexport default TitleOne;","import { TitleTwoMainStyles } from \"./titleViews.styled\";\n\n\nconst TitleTwoMain = (children) => {\n    return (\n        <TitleTwoMainStyles>\n            {children}\n        </TitleTwoMainStyles>\n    )\n};\n\n\nexport default TitleTwoMain;","// TitleTwoAuth\nimport { TitleTwoAuthStyles } from \"./titleViews.styled\";\n\n\nconst TitleTwoAuth = (children) => {\n    return (\n        <TitleTwoAuthStyles>\n            {children}\n        </TitleTwoAuthStyles>\n    )\n};\n\n\nexport default TitleTwoAuth;","import { TitleTwoStyles } from \"./titleViews.styled\";\n\n\nconst TitleTwoError = (children) => {\n    return (\n        <TitleTwoStyles>\n            {children}\n        </TitleTwoStyles>\n    )\n};\n\n\nexport default TitleTwoError;","// TitleThreeUser\nimport { TitleThreeUserStyles } from \"./titleViews.styled\";\n\n\nconst TitleThreeUser = (children) => {\n    return (\n        <TitleThreeUserStyles>\n            {children}\n        </TitleThreeUserStyles>\n    )\n};\n\n\nexport default TitleThreeUser;","import { TitleThreeCardStyles } from \"./titleViews.styled\";\n\n\nconst TitleThreeMainCard = (children) => {\n    return (\n        <TitleThreeCardStyles>\n            {children}\n        </TitleThreeCardStyles>\n    )\n};\n\n\nexport default TitleThreeMainCard;","import TitleOne from \"./TitlesView/TitleOne\";\nimport TitleTwoMain from \"./TitlesView/TitleTwoMain\";\nimport TitleTwoAuth from \"./TitlesView/TitleTwoAuth\";\nimport TitleTwoError from \"./TitlesView/TitleTwoError\";\nimport TitleThreeUser from \"./TitlesView/TitleThreeUser\";\nimport TitleThreeMainCard from \"./TitlesView/TitleThreeMainCard\";\n\n\nconst Title = (props) => {\n    const { children, titleStyle } = props;\n\n    if (titleStyle === \"h1\") return TitleOne(children);\n    if (titleStyle === \"h2_main\") return TitleTwoMain(children);\n    if (titleStyle === \"h2_auth\") return TitleTwoAuth(children);\n    if (titleStyle === \"h2_404\") return TitleTwoError(children);\n    if (titleStyle === \"h3_user\") return TitleThreeUser(children);\n    if (titleStyle === \"h3_main_card\") return TitleThreeMainCard(children);\n    else return TitleTwoMain(children);\n};\nTitle.defaultProps = {\n    titleStyle: 'h2_main',\n};\n\n\nexport default Title;","import styled from \"@emotion/styled\";\nimport { Form } from \"formik\";\n\nexport const AuthPageStyled = styled.div`\n    display:flex;\n    align-items: center;\n\n    min-height: calc(100vh - 60px);\n\n    > div {\n        box-sizing: border-box;\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        width: 280px;\n        // height: 400px;\n        padding: 40px 12px;\n        margin-left: auto;\n        margin-right: auto;\n\n        text-align: center;\n\n        border-radius: 20px;\n        background: ${({ theme }) => theme.colors.pureWhite};\n        box-shadow: ${({ theme }) => theme.shadows.small};\n        \n        .auth_bottom_text {\n            margin: 0;\n            margin-top: auto;\n\n            font-weight: 500;\n            font-size: 12px;\n            line-height: 1.37;\n            letter-spacing: 0.04em;\n            color: ${({ theme }) => theme.colors.gray};\n\n            a {\n                color: ${({ theme }) => theme.colors.blue};\n            }\n        }\n    }\n@media (min-width: 768px) {\n\n    > div {\n        width: 608px;\n        height: 482px;\n    }\n}\n`;\n\nexport const FormStyled = styled(Form)`\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    min-height: 250px;\n    margin: 40px 0;\n\n    > div {\n        display: flex;\n        flex-direction: column;\n        gap:24px;\n        margin-bottom: 40px;\n    }\n    button {\n        width: 256px;\n    }\n@media (min-width: 768px) {\n\n    button {\n        width: 458px;\n    }\n}\n`;\n//padding: 60px 75px;","export const fields = {\n    email: {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        required: true,\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password(min 8)\",\n        required: true,\n    },\n    confirmPassword: {\n        type: \"password\",\n        name: \"confirm\",\n        placeholder: \"Confirm password\",\n        required: true,\n    },\n};","export const initialValues = {\n    email: '',\n    password: '',\n    confirm: '',\n};","import * as yup from 'yup';\n\nexport const regSchema = yup.object().shape({\n    email: yup.string().required().nullable().email('Enter a valid Email').trim(),\n    password: yup.string().required('Password is unsecure').nullable().min(8,'min value 8').max(16,'max value 16').trim(),\n    confirm: yup.string().required('Password is unsecure').nullable().min(8,'min value 8').max(16,'max value 16').trim(),\n});","import styled from \"@emotion/styled\";\n\nexport const TextFieldStyled = styled.div`\n    position: relative;\n\n    color: ${({ theme }) => theme.colors.red};\n\n    input {\n        box-sizing: border-box;\n\n        width: 256px;\n        height: 48px;\n        padding: 0 16px;\n\n        font-size: 16px;\n\n        color: ${({ theme }) => theme.colors.gray};\n        background: ${({ theme }) => theme.colors.whiteInput};\n        border: 1px solid ${({ theme, hasError }) => hasError ? theme.colors.red : theme.colors.blue};\n        border-radius: 40px;\n\n        ::placeholder {\n            font-size: 16px;\n            color: ${({ theme }) => theme.colors.grayInput};\n        }\n    }\n    svg {\n        position: absolute;\n        top: 12px;\n\n        cursor: pointer;\n    }\n    #cross_big {\n        right: 12px;\n    }\n    #eye_closed, #eye_open {\n        right: 48px;\n    }\n@media (min-width: 768px) {\n    \n    input {\n        width: 458px;\n    }\n}\n`;","import styled from \"@emotion/styled\";\n\nexport const ErrField = styled.div`\n    position: absolute;\n    left: 16px;\n\n    font-size: 12px;\n\n    color: ${({ theme }) => theme.colors.red};\n`;","import { Field, ErrorMessage, useFormikContext, getIn } from \"formik\";\nimport { useMemo, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport { TextFieldStyled } from \"./textField.styled\";\nimport Icon from \"components/shares/Icon/Icon\";\nimport { ErrField } from \"./errorField.styled\";\n\n\nconst TextField = ({ name, type, ...props }) => {\n    const [isOpenEye, setIsOpenEye] = useState(false);\n    const { values, setFieldValue, errors, touched, setErrors, } = useFormikContext();//setTouched\n    const id = useMemo(() => nanoid(), []);\n\n\n    const toggleEyeView = () => {\n        setIsOpenEye(prev => !prev);\n    }\n    const onHandleChange = (e) => {\n        const { value } = e.target;\n\n        setFieldValue(name, value);\n        // setTouched({ ...setTouched, [name]: \"\" });\n        setErrors({ ...errors, [name]: \"\" });\n    };\n    const deleteValue = () => {\n        setFieldValue(name, \"\");\n        // setTouched({ ...setTouched, [name]: \"\" });\n        setErrors({ ...errors, [name]: \"\" });\n        setIsOpenEye(false);\n    };\n\n    const isError = getIn(errors, name) && getIn(touched, name);\n    const isVisible = values[name];\n    const hasEyeClosed = name !== \"email\";\n    const isEyeClosed = !isOpenEye;\n    const isPasswordVisible = !isOpenEye ? \"password\" : \"text\";\n\n    // console.log(\"isVisible   |-->\", isVisible);\n    // console.log(\"values |-->\", values);\n\n    return (\n        <TextFieldStyled hasError={isVisible ? isError : null}>\n            <Field id={id} {...props}\n                onChange={onHandleChange}\n                name={name}\n                type={type === \"email\" ? type : isPasswordVisible}\n                value={values[name]}\n            />\n            {isVisible && hasEyeClosed && isEyeClosed && <Icon onClick={toggleEyeView} id=\"eye_closed\" />}\n            {isVisible && hasEyeClosed && !isEyeClosed && <Icon onClick={toggleEyeView} id=\"eye_open\" />}\n            {isVisible && <Icon onClick={deleteValue} id=\"cross_big\" colorStroke=\"red\" />}\n            {isVisible && isError && <ErrorMessage name={name} component={ErrField} />}\n        </TextFieldStyled>\n    )\n};\n\n\nexport default TextField;","import { AuthPageStyled, FormStyled } from \"./authPage.styled\";\nimport Title from \"components/shares/Title/Title\";\n\nimport { Formik } from 'formik';\nimport { fields, initialValues, regSchema } from \"./data\";\nimport TextField from \"./elements/TextField\";\nimport Button from \"components/shares/Button/Button\";\n\n\nconst AuthBox = ({ children, forWhat }) => {\n\n    const onSubmitSignup = (data, actions) => {\n        // let { email, password, confirm } = data;\n        // console.log(\"RegData:\", data);\n\n        // dispatch(signUp(personData));\n        // actions.resetForm();\n    };\n\n    return (\n        <AuthPageStyled>\n            <div>\n                <Title titleStyle=\"h2_auth\">{forWhat}</Title>\n\n                <Formik\n                    onSubmit={onSubmitSignup}\n                    initialValues={initialValues}\n                    validationSchema={regSchema}\n                    validateOnChange={false}\n                    validateOnBlur={true}\n                >\n                    <FormStyled>\n                        <div>\n                            <TextField {...fields.email} />\n                            <TextField {...fields.password} />\n                            {forWhat === \"Registration\" && <TextField {...fields.confirmPassword} />}\n                        </div>\n\n                        <Button buttonView=\"blue\" type=\"submit\">{forWhat}</Button>\n                    </FormStyled>\n                </Formik>\n\n                {children}\n            </div>\n        </AuthPageStyled>\n    )\n};\n\n\nexport default AuthBox;","import { Link } from \"react-router-dom\";\n\n// import { LoginPageStyled } from \"./loginPage.styled\";\nimport AuthBox from \"../AuthBox\";\n\n\nconst LoginPage = () => {\n    return (\n        <AuthBox forWhat=\"Login\">\n            <p className=\"auth_bottom_text\">Don't have an account?<Link to=\"/register\"> Register</Link></p>\n        </AuthBox>\n    )\n};\n\n\nexport default LoginPage;"],"names":["whiteBtnStyles","colors","blue","white","gradBlue","ButtonTag","styled","width","buttonView","theme","blueBtnStyles","yellow","yellowBtnStyles","scale","Button","props","type","children","defaultProps","TitleOneStyles","TitleTwoStyles","TitleTwoMainStyles","TitleTwoAuthStyles","TitleThreeUserStyles","TitleThreeCardStyles","Title","titleStyle","TitleOne","TitleTwoMain","TitleTwoAuth","TitleTwoError","TitleThreeUser","TitleThreeMainCard","AuthPageStyled","pureWhite","shadows","small","gray","FormStyled","Form","fields","name","placeholder","required","initialValues","email","password","confirm","regSchema","yup","shape","nullable","trim","min","max","TextFieldStyled","red","whiteInput","hasError","grayInput","ErrField","useState","isOpenEye","setIsOpenEye","useFormikContext","values","setFieldValue","errors","touched","setErrors","id","useMemo","nanoid","toggleEyeView","prev","isError","getIn","isVisible","hasEyeClosed","isEyeClosed","isPasswordVisible","onChange","e","value","target","Icon","onClick","colorStroke","component","forWhat","onSubmit","data","actions","validationSchema","validateOnChange","validateOnBlur","className","to"],"sourceRoot":""}